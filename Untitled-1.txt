def angle_(R):
    r1 = R[0,:]-R[1,:]
    r2 = R[2,:]-R[1,:]
    dot = np.sum(r1 * r2)
    r1_mag = np.sqrt(np.sum(r1 ** 2))
    r2_mag = np.sqrt(np.sum(r2 ** 2))
    angle = np.arccos(dot / (r1_mag * r2_mag))
    return angle

angle = jax.vmap(angle_, in_axes = (0,))

result = angle(R)



gradient_v = jax.grad(V) # V(R) is potential function

result = -1 * gradient_v(R)


import jax as jax
import jax.np as jnp